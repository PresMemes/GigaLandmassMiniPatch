#Once again, this is the only way to stop the black hole from being comically small

#########################
# Phase 1 Megastructure #
#########################
ehof_megastructure_phase1_idle = {
	entity = "ehof_megastructure_phase1_entity"
	portrait = "GFX_megastructure_ehof"
	show_galactic_map_icon = yes
	place_entity_on_planet_plane = yes

	upgrade_from = { ehof_megastructure_phase0 }
	prerequisites = { "tech_ehof_phase_01" }
	possible = {
		from = { has_technology = tech_ehof_phase_01 }
		custom_tooltip = {
			fail_text = "requires_ehof_not_in_use"
			from = {
				NOR = {
					has_country_flag = ehof_activating
					has_country_flag = ehof_activated
					has_country_flag = ehof_on_cooldown
				}
			}
		}
	}

	build_time = @phase_1_build_time
	resources = {
		category = giga_megastructures
		cost = {
			alloys = @phase_1_alloy_cost
			unity = @giga_mega_unity_cost
		}
		upkeep = {
			minerals = @phase_1_mineral_upkeep
			energy = @phase_1_energy_upkeep
		}
		produces = {
			physics_research = @phase_1_research_bonus
			#ehof_sr_negative_mass = @phase_1_resource_bonus
		}
	}

	ai_weight = {
		factor = 5

		modifier = {
			factor = 0
			has_global_flag = ehof_disabled
		}

		modifier = {
			factor = 0
			has_global_flag = ehof_ai_disabled
		}
	}

	on_build_complete = {
		if = {
			limit = { star = { NOT = { is_planet_class = pc_ehof_black_hole } } }
			star = {
				change_pc = pc_ehof_black_hole
				set_planet_size = 250 #PM: Overwrite to stop the black hole from shrinking
			}
		}

		fromfrom = {
			remove_ehof_flags = yes
			set_megastructure_flag = ehof_phase_01
		}
		set_star_flag = ehof_megastructure_system@from
		save_event_target_as = ehof_megastructure_system

		# Prevents NDB & QSO
		every_system_planet = {
			set_planet_flag = cant_build_here
			set_planet_flag = cant_target_this_planet
		}

		from = {
			set_variable = { which = ehof_phase value = 1 }
			country_event = { id = ehof_megastructure.101 }
		}
	}
}


ehof_megastructure_restored = {
	entity = "ehof_megastructure_phase2_entity"
	portrait = "GFX_megastructure_ehof"
	show_galactic_map_icon = yes
	place_entity_on_planet_plane = yes

	upgrade_from = { ehof_megastructure_ruined }
	prerequisites = { "tech_ehof_phase_01" }
	potential = {
		has_technology = tech_ehof_phase_01
		check_variable = { which = ehof_phase value < 1 }
	}

	possible = {
		custom_tooltip = { fail_text = "requires_no_existing_ehof"						from = { NOT = { any_owned_megastructure = { is_any_ehof = yes } } } }
		exists = from
		from = { has_technology = tech_ehof_phase_01 }
	}

	build_time = @ruined_build_time
	resources = {
		category = giga_megastructures
		cost = {
			influence = @ruined_influence_cost
			alloys = @ruined_alloy_cost
			unity = @giga_mega_repair_unity_cost
		}
		upkeep = {
			minerals = @phase_2_mineral_upkeep
			energy = @phase_2_energy_upkeep
		}
		produces = {
			#ehof_sr_negative_mass = @phase_2_resource_bonus
			physics_research = @phase_2_research_bonus
		}
	}

	ai_weight = {
		factor = 5
		modifier = { factor = 0 has_global_flag = ehof_disabled }
		modifier = { factor = 0 has_global_flag = ehof_ai_disabled }
		modifier = {
			factor = 0
			any_country = {
				is_country_type = global_event
				check_variable = { which = amount_of_ehofs value >= giga_ehof_ai_cap }
			}
		}
	}

	on_build_start = {
		random_country = {
			limit = { is_country_type = global_event }
			change_variable = { which = amount_of_ehofs value = 1 }
		}
	}
	on_build_cancel = {
		random_country = {
			limit = { is_country_type = global_event }
			subtract_variable = { which = amount_of_ehofs value = 1 }
		}
	}
	on_build_complete = {
		if = {
			limit = { star = { NOT = { is_planet_class = pc_ehof_black_hole } } }
			star = {
				change_pc = pc_ehof_black_hole
				set_planet_size = 250 #PM: Overwrite to stop the black hole from shrinking
			}
		}
		star = {
			giga_set_has_mega_flag = yes
			if = { limit = { has_orbital_station = yes } orbital_station = { dismantle = yes } }
		}
		giga_remove_system_debris = yes
		fromfrom = { remove_megastructure = this }
		spawn_megastructure = { type = "ehof_megastructure_phase2_idle" owner = from }
		from = {
			set_country_flag = ehof_restored
			if = { limit = { NOT = { has_technology = tech_abstract_2 } } give_technology = { tech = tech_abstract_2 } }
			if = { limit = { NOT = { has_technology = tech_negative_pressure } } give_technology = { tech = tech_negative_pressure } }
			if = { limit = { NOT = { has_technology = tech_ehof_phase_02 } } give_technology = { tech = tech_ehof_phase_02 } }
		}
	}
}